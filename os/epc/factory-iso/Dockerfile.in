FROM docker.io/archlinux:base-20220925.0.89186

RUN pacman-key --init && \
    pacman --noconfirm -Sy && \
    pacman --noconfirm -S archlinux-keyring && \
    pacman-key --populate

# create a system capabale of building uefi-isos
ENV DOCKER_package="arch-install-scripts pacman-contrib dosfstools archiso erofs-utils sudo binutils"
RUN sed -i 's/^SigLevel.*/SigLevel = Optional TrustAll/g' /etc/pacman.conf && \
    echo "RemoteFileSigLevel = Optional TrustAll" >> /etc/pacman.conf && \
    echo "Server = https://archive.archlinux.org/repos/2022/10/01/\$repo/os/\$arch" > /etc/pacman.d/mirrorlist && \
    pacman --noconfirm -Sy && \
    pacman --noconfirm -Su $DOCKER_package 

# download package forming the factory os
ENV FACTORY_ROOTFS_package="archlinux-keyring sudo binutils linux-rt mc nano mkinitcpio mkinitcpio-nfs-utils rsync grub efibootmgr linux-firmware vi"
RUN echo "[realtime]" >> /etc/pacman.conf && \
    echo "Server = https://pkgbuild.com/~dvzrv/repos/realtime/x86_64/" >> /etc/pacman.conf && \
    pacman --noconfirm -Sy && \
    echo "$FACTORY_ROOTFS_package" | sed -e 's/ /\n/g' | xargs -i pactree -s -u {} | sort -u > /package && \
    rm -rf /var/cache/pacman/pkg/ && \
    mkdir -p /var/cache/pacman/pkg && \
    pacman --noconfirm -Sw $(cat /package) && \
    mv /var/cache/pacman/pkg /factory-package && \
    mkdir /factory-package-database && \
    repo-add -q /factory-package-database/epc-base.db.tar.zst /factory-package/*.zst && \
    repo-add -q /factory-package-database/epc-base.db.tar.zst /factory-package/*.xz && \
    mv /factory-package-database/* /factory-package

ADD generatePkgBuild.sh sda.sfdisk install-factory-os.sh install.sh /
ADD hook/ /hook
ADD install/ /install
RUN mkdir /epc-meta && \
    chmod 777 /epc-meta && \
    /generatePkgBuild.sh > /epc-meta/PKGBUILD && \
    ln -s /install.sh /epc-meta/install.sh && \
    package=$(cat /package | sed "s/\(.*\)/'\1'/g") && \
    sed -i 's/#package#/$package/g' /epc-meta/PKGBUILD && \
    useradd bob

USER bob
RUN cd /epc-meta && makepkg -d -s -f
USER root

# prepare iso generation
ENV ISO_package="arch-install-scripts base dosfstools efibootmgr erofs-utils linux mkinitcpio mkinitcpio-archiso nano syslinux"
RUN pacman --noconfirm -Sy && \
    cp -r /usr/share/archiso/configs/baseline/ /archlive
ADD sda.sfdisk /archlive/airootfs/sda.sfdisk
ADD install-factory-os.sh /archlive/airootfs/install-factory-os.sh
RUN ln -s install-factory-os.sh /archlive/airootfs/runme.sh && \
    echo "$ISO_package" | sed -e 's/ /\n/g' > /archlive/package.x86_64 && \
    mkdir -p /archlive/airootfs/package && \
    mv /factory-package/* /archlive/airootfs/package && \
    mv /epc-meta/* /archlive/airootfs/package/ && \
    echo "Server = https://archive.archlinux.org/repos/2022/10/01/\$repo/os/\$arch" > /etc/pacman.d/mirrorlist && \
    pacman --noconfirm -Sy && \
    pacman --noconfirm -Su

CMD mkarchiso -v -w /work_dir -o /out /archlive
